<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[小米飯De吐槽地]]></title>
  <subtitle><![CDATA[问君能有几多愁，恰似听那PDM讲需求。]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://zfanswer.github.io/"/>
  <updated>2015-09-01T14:50:42.000Z</updated>
  <id>http://zfanswer.github.io/</id>
  
  <author>
    <name><![CDATA[小米飯]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[为部署在Github上的Hexo博客绑定个性域名]]></title>
    <link href="http://zfanswer.github.io/2015/09/03/%E4%B8%BA%E9%83%A8%E7%BD%B2%E5%9C%A8Github%E4%B8%8A%E7%9A%84Hexo%E5%8D%9A%E5%AE%A2%E7%BB%91%E5%AE%9A%E4%B8%AA%E6%80%A7%E5%9F%9F%E5%90%8D/"/>
    <id>http://zfanswer.github.io/2015/09/03/为部署在Github上的Hexo博客绑定个性域名/</id>
    <published>2015-09-03T14:49:52.000Z</published>
    <updated>2015-09-01T14:50:42.000Z</updated>
    <content type="html"><![CDATA[<p><br> </p>
<font color="slategrey">作者：<a href="http://zfan.me" target="_blank" rel="external">小米飯</a><br>原文地址：<a href="http://blog.zfan.me/2015/09/03/为部署在Github上的Hexo博客绑定个性域名" target="_blank" rel="external">http://blog.zfan.me/2015/09/03/为部署在Github上的Hexo博客绑定个性域名</a><br>转载、参考请注明出处，如果觉得文章对你有帮助，也请通过留言来支持一下。</font>
]]></content>
    <summary type="html">
    <![CDATA[<p><br> </p>
<font color="slategrey">作者：<a href="http://zfan.me" target="_blank" rel="external">小米飯</a><br>原文地址：<a href="http://blog.zfan.me]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[Alfred 2 Workflow for Hexo]]></title>
    <link href="http://zfanswer.github.io/2015/09/02/Alfred-2-Workflow-for-Hexo/"/>
    <id>http://zfanswer.github.io/2015/09/02/Alfred-2-Workflow-for-Hexo/</id>
    <published>2015-09-01T15:45:58.000Z</published>
    <updated>2015-09-02T04:11:18.000Z</updated>
    <content type="html"><![CDATA[<h3 id="前言">前言</h3><p><a href="https://www.alfredapp.com/" target="_blank" rel="external">Alfred</a>，用Mac的童鞋没有没听说这个神器的吧。我之前用过一阵免费v1，后来就用Yosemite升级的spotlight了。前几天见到同事用，貌似功能多了不少，就又去官网看了看，发现已经到v2了，看了看介绍没有任何犹豫，买了个Mage Supporter的License开始了各种爽。</p>
<p>最近比较迷<strong>Hexo</strong>，就想着用Alfred Workflow集成一下，于是有了这篇文章。</p>
<h3 id="Alfred_Workflow简介">Alfred Workflow简介</h3><p><a href="https://www.alfredapp.com/" target="_blank" rel="external">Alfred</a>基本功能就不做介绍了，直接去官网或者随便搜一下应该就有很多推荐这个<strong>神器</strong>的文章。<br>Alfred的Workflow就是可以让你可以自定义几个组件，把它们连起来做一些奇妙的事情。</p>
<p>比如官方的例子里<code>Simple Folders Filter</code>，可以让你可以用<code>f</code>关键字加你的输入来搜索你的个人目录中的文件夹。你甚至可以通过很小的改动，就可以让它搜索特定类型的文件，如<code>.md</code>等。</p>
<a id="more"></a>
<center>编辑界面<br><img src="./snapshot3.png" alt="编辑界面"></center>

<center>使用效果<br><img src="./snapshot4.png" alt="使用方法"></center>

<p>习惯了官方提供的几个小元件和原理后，你可以非常快速地做出让你事半功倍的<strong>快捷方式</strong>。<br>其中最有用的个人感觉应该是<code>Script Filter</code>和<code>Run Script</code>元件了，基本上的Script语言都支持。而且原理特别简单，你的Script需要输出一个规定格式XML（<a href="https://www.alfredapp.com/help/workflows/inputs/script-filter/#example" target="_blank" rel="external">Link</a>，不需要是文件，标准输出就可以），Alfred窗口显示的下拉菜单就是按这个xml内容显示的，每当输入有变动（其实这也可以设置）就会调用一次Script刷新一次下拉菜单。</p>
<h3 id="Workflow_for_Hexo_v1-0">Workflow for Hexo v1.0</h3><p>先上几张使用效果的图。</p>
<center>支持的所有指令<br><img src="./snapshot1.png" alt="Hexo Workflow效果"></center>

<center>打开你的posts<br><img src="./snapshot2.png" alt=""></center>

<p>可使用的Keyword和支持的Hexo指令：  </p>
<ul>
<li><strong>hexon</strong>：等同于<code>hexo new</code>，<strong>支持原命令的参数</strong>，后边写文章题目。</li>
<li><strong>hexoo</strong>：没有等同的hexo命令，只是按更新日期由新到旧地列出你<code>source/_posts/</code>文件夹中的所有文件，选中后回车将使用系统默认软件打开。</li>
<li><strong>hexog</strong>：等同于<code>hexo generate</code>，不支持参数。</li>
<li><strong>hexod</strong>：等同于<code>hexo deploy</code>，不支持参数，所以如果是发布到Git类的云服务时，请使用SHH Key免去输入密码这一步骤。</li>
<li><strong>hexos</strong>：等同于<code>hexo server</code>，<strong>支持原命令的参数</strong>，如<code>-i 192.168.1.1 -p 4001</code>，<strong>注意</strong>这个命令会打开Terminal，因为你最后需要用<code>Ctrl+C</code>关闭服务器。</li>
<li><strong>hexoc</strong>：等同于<code>hexo clean</code>，不支持参数。</li>
</ul>
<p>下图就是整个Workflow的编辑页面，其实算是比较简单的搭配，<code>Keyword</code>=&gt;<code>Run Script</code>居多，然后执行结果会通过通知消息显示出来。</p>
<center>Alfred 2 Workflow for Hexo<br><img src="./snapshot5.png" alt=""></center>

<p>我已经把这个Workflow放到<a href="https://github.com/zfanswer/alfred-workflow-hexo" target="_blank" rel="external">Github : alfred-workflow-hexo</a>和<a href="http://www.packal.org/workflow/hexo" target="_blank" rel="external">packal - hexo</a>上了，有需要的童鞋可以看看。<a href="http://www.packal.org/workflow/hexo" target="_blank" rel="external">packal</a>是Alfred workflow和theme的索引网站，可以发现很多好东西。</p>
<h4 id="配置">配置</h4><p>第一版有些粗糙，需要自己去修改Workflow里小组件的参数，让它知道你的hexo文件夹的位置。</p>
<ol>
<li>修改每个“Run Script”组件中的脚本语言，设置为你的系统所使用的，比如我用的是<code>/bin/zsh</code>.</li>
<li>修改每个“Run Script”组件中脚本代码的第一行, 设置成你的hexo文件夹的位置。</li>
<li><strong>注意</strong>：对于命令“hexod”，由于你无法输入用户名和密码，所以推荐使用SSH Key来连接Git类云服务以避免输入密码.</li>
</ol>
<p>欢迎试用，有问题可以留言。</p>
<p><br> </p>
<font color="slategrey">作者：<a href="http://zfan.me" target="_blank" rel="external">小米飯</a><br>原文地址：<a href="http://blog.zfan.me/2015/09/02/Alfred-2-Workflow-for-Hexo" target="_blank" rel="external">http://blog.zfan.me/2015/09/02/Alfred-2-Workflow-for-Hexo</a><br>转载、参考请注明出处，如果觉得文章对你有帮助，也请通过留言来支持一下。</font>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="前言">前言</h3><p><a href="https://www.alfredapp.com/">Alfred</a>，用Mac的童鞋没有没听说这个神器的吧。我之前用过一阵免费v1，后来就用Yosemite升级的spotlight了。前几天见到同事用，貌似功能多了不少，就又去官网看了看，发现已经到v2了，看了看介绍没有任何犹豫，买了个Mage Supporter的License开始了各种爽。</p>
<p>最近比较迷<strong>Hexo</strong>，就想着用Alfred Workflow集成一下，于是有了这篇文章。</p>
<h3 id="Alfred_Workflow简介">Alfred Workflow简介</h3><p><a href="https://www.alfredapp.com/">Alfred</a>基本功能就不做介绍了，直接去官网或者随便搜一下应该就有很多推荐这个<strong>神器</strong>的文章。<br>Alfred的Workflow就是可以让你可以自定义几个组件，把它们连起来做一些奇妙的事情。</p>
<p>比如官方的例子里<code>Simple Folders Filter</code>，可以让你可以用<code>f</code>关键字加你的输入来搜索你的个人目录中的文件夹。你甚至可以通过很小的改动，就可以让它搜索特定类型的文件，如<code>.md</code>等。</p>]]>
    
    </summary>
    
      <category term="alfred" scheme="http://zfanswer.github.io/tags/alfred/"/>
    
      <category term="hexo" scheme="http://zfanswer.github.io/tags/hexo/"/>
    
      <category term="workflow" scheme="http://zfanswer.github.io/tags/workflow/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[用SSH key免去github提交时输入密码]]></title>
    <link href="http://zfanswer.github.io/2015/09/01/%E7%94%A8SSH-key%E5%85%8D%E5%8E%BBgithub%E6%8F%90%E4%BA%A4%E6%97%B6%E8%BE%93%E5%85%A5%E5%AF%86%E7%A0%81/"/>
    <id>http://zfanswer.github.io/2015/09/01/用SSH-key免去github提交时输入密码/</id>
    <published>2015-08-31T16:09:27.000Z</published>
    <updated>2015-09-02T03:10:38.000Z</updated>
    <content type="html"><![CDATA[<h3 id="背景">背景</h3><p>开始使用Hexo后，发布文章或做些主题上的修改总要不断的push到Github上，每次都输入用户名和密码实在是太麻烦了。<br>所以想使用SSH Key来免去这一步骤，不过要<strong>注意</strong>的是，一定只在你受信任的机器上这么做。</p>
<h3 id="操作">操作</h3><h4 id="修改hexo配置文件">修改hexo配置文件</h4><p>前往你的<code>dummy.github.io</code> repository，查看其SSH的URL，应该是如下格式的，</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">git@github<span class="class">.com</span>:dummy/dummy<span class="class">.github</span><span class="class">.io</span><span class="class">.git</span></span><br></pre></td></tr></table></figure>
<p>修改<code>_config.xml</code>文件中Git repository的URL</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line"># Deployment&#10;## Docs: http://hexo.io/docs/deployment.html&#10;deploy:&#10;  type: git&#10;  repository: git@github.com:dummy/dummy.github.io.git&#10;  branch: master</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h4 id="为Github生成一个新的密钥">为Github生成一个新的密钥</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line">ssh-keygen -t rsa -C <span class="string">"your_email@example.com"</span></span><br></pre></td></tr></table></figure>
<p>一路回车结束它提出的所有问题，你应该可以看到如下输出。</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">Your identification has been saved <span class="keyword">in</span> <span class="regexp">~/.ssh/</span>id_rsa.</span><br><span class="line">Your <span class="keyword">public</span> key has been saved <span class="keyword">in</span> <span class="regexp">~/.ssh/</span>id_rsa.pub.</span><br></pre></td></tr></table></figure>
<h4 id="将SSH_Key加入Github中">将SSH Key加入Github中</h4><p>前往 <a href="https://github.com/settings/ssh" target="_blank" rel="external">https://github.com/settings/ssh</a> ，点击<code>Add SSH  key</code>，在title中填入你能分辨这个key储存位置的名字，然后把<code>~/.ssh/id_rsa.pub</code>中的内容复制到下边的内容框中，添加。<br>然后打开Terminal进行连接测试。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure>
<p>应该会看到如下输出：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">The authenticity of host <span class="string">'github.com (207.97.227.239)'</span> can<span class="string">'t be established. RSA key fingerprint is 11:22:aa:33:44:55:dd:66:77:bb:88:99:ee:ff:00:cc. Are you sure you want to continue connecting (yes/no)? </span><br><span class="line">#输入yes回车</span><br><span class="line"></span><br><span class="line">Hi xxxxx! You'</span>ve successfully authenticated, but GitHub does not provide shell access.</span><br></pre></td></tr></table></figure>
<p>然后就可以愉快的使用Hexo部署了。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo deploy</span><br></pre></td></tr></table></figure>
<h4 id="为Github生成一个新的密钥（简便方法）">为Github生成一个新的密钥（简便方法）</h4><p>直接下载Github的客户端登录，它会自动生成SSH Key并绑定你的账户。</p>
<p><br> </p>
<font color="slategrey">作者：<a href="http://zfan.me" target="_blank" rel="external">小米飯</a><br>原文地址：<a href="http://blog.zfan.me/2015/09/01/用SSH-key免去github提交时输入密码" target="_blank" rel="external">http://blog.zfan.me/2015/09/01/用SSH-key免去github提交时输入密码</a><br>转载、参考请注明出处，如果觉得文章对你有帮助，也请通过留言来支持一下。</font>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="背景">背景</h3><p>开始使用Hexo后，发布文章或做些主题上的修改总要不断的push到Github上，每次都输入用户名和密码实在是太麻烦了。<br>所以想使用SSH Key来免去这一步骤，不过要<strong>注意</strong>的是，一定只在你受信任的机器上这么做。</p>
<h3 id="操作">操作</h3><h4 id="修改hexo配置文件">修改hexo配置文件</h4><p>前往你的<code>dummy.github.io</code> repository，查看其SSH的URL，应该是如下格式的，</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">git@github<span class="class">.com</span>:dummy/dummy<span class="class">.github</span><span class="class">.io</span><span class="class">.git</span></span><br></pre></td></tr></table></figure>
<p>修改<code>_config.xml</code>文件中Git repository的URL</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line"># Deployment&#10;## Docs: http://hexo.io/docs/deployment.html&#10;deploy:&#10;  type: git&#10;  repository: git@github.com:dummy/dummy.github.io.git&#10;  branch: master</span><br></pre></td></tr></table></figure>]]>
    
    </summary>
    
      <category term="github" scheme="http://zfanswer.github.io/tags/github/"/>
    
      <category term="hexo" scheme="http://zfanswer.github.io/tags/hexo/"/>
    
      <category term="ssh" scheme="http://zfanswer.github.io/tags/ssh/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[3分钟快速在Github pages上免费搭建Hexo博客]]></title>
    <link href="http://zfanswer.github.io/2015/08/31/3%E5%88%86%E9%92%9F%E5%BF%AB%E9%80%9F%E5%9C%A8Github-pages%E4%B8%8A%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BAHexo%E5%8D%9A%E5%AE%A2/"/>
    <id>http://zfanswer.github.io/2015/08/31/3分钟快速在Github-pages上免费搭建Hexo博客/</id>
    <published>2015-08-31T04:53:42.000Z</published>
    <updated>2015-08-31T16:11:24.000Z</updated>
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>搜索Markdown和Evernote时无意之中发现了<strong>Hexo</strong>，一个支持Markdown的静态博客框架，本人界面控，看见 <a href="http://hexo.io" target="_blank" rel="external">http://hexo.io</a> 的页面就走不动了。</p>
<p><strong>Hexo</strong>的配置真是超乎想象得简单，以至于我手都放在键盘上却不知道从何说起了。官方文档还有非常完善的中文版本，本人是只读了官方文档就搭好了，有想自己体验的同学可以移步 <a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="external">https://hexo.io/zh-cn/docs/</a> 。</p>
<p><strong>注意：</strong>本文所写步骤是在 Mac Yosemite 10.10 上完成，使用Hexo 3.x。但并不代表其他平台无法使用此教程，至少可以参考。</p>
<h2 id="前提">前提</h2><ul>
<li>确认已经安装了<a href="http://brew.sh/" target="_blank" rel="external">homebrew</a></li>
</ul>
<h2 id="准备工作">准备工作</h2><ol>
<li><p>安装Git</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew update</span><br><span class="line">brew install git</span><br></pre></td></tr></table></figure>
</li>
<li><p>安装Node.js</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew install node</span><br></pre></td></tr></table></figure>
</li>
<li><p>安装Hexo命令行工具</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="搭建本地Hexo工作环境">搭建本地Hexo工作环境</h2><p>实际上Hexo只是一个帮你生成静态网站的工具，hexo自带的server模块，感觉只是用来做本地测试的，真正发布时还是推荐用其他服务器。<br>换句话说，你要在多个电脑都使用Hexo来写博客，每个电脑都要配置一个Hexo环境，不过也就是安装上边的3个东西，然后把Hexo的工作目录同步一下就好了。至于怎么同步，你可以用Dropbox，Google dirve，百度云或者基于Git云服务等。</p>
<h3 id="创建hexo工作目录">创建hexo工作目录</h3><p>这里以Dropbox同步为例，以hexo为工作目录名称，你可以在任何你喜欢的地方、创建你想要的名称的文件夹作为hexo的工作目录。<a id="more"></a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/Dropbox</span><br><span class="line">hexo init hexo <span class="comment">#后一个hexo为工作目录名称</span></span><br><span class="line"><span class="built_in">cd</span> hexo</span><br><span class="line">npm install</span><br><span class="line"></span><br><span class="line">或者</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> ~/Dropbox</span><br><span class="line">mkdir hexo</span><br><span class="line"><span class="built_in">cd</span> hexo</span><br><span class="line">hexo init <span class="comment">#默认用当前目录作为hexo工作目录</span></span><br><span class="line">npm install</span><br></pre></td></tr></table></figure>
<p>然后使用如下指令启动hexo server。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure>
<p>看到下边的输出说明hexo server启动成功，用浏览器打开<code>http://0.0.0.0:4000/</code>即可查看效果，又没有一丝感动——真是太简单了！</p>
<figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line">INFO  Hexo is running <span class="keyword">at</span> <span class="keyword">http</span>://<span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">4000</span>/. Press Ctrl+C <span class="built_in">to</span> <span class="built_in">stop</span>.</span><br></pre></td></tr></table></figure>
<h3 id="安装几个方便的插件">安装几个方便的插件</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/Dropbox/hexo</span><br><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">npm install hexo-generator-feed --save</span><br><span class="line">npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure>
<p><strong>hexo-deployer-git</strong>：方便使用<code>hexo deploy</code>命令发布博客。<br><strong>hexo-generator-feed</strong>：使网站支持RSS订阅。<br><strong>hexo-generator-sitemap</strong>：生成sitemap供搜索引擎抓取，如果你建的私人日记类不想被搜索引擎索引，可以不需要这个。</p>
<h2 id="部署到Github_pages">部署到Github pages</h2><p><a href="https://pages.github.com/" target="_blank" rel="external">Github pages</a>是让你可以用一个与你Github账户名同名的Repository来建立一个静态网站，网站的网址也是已你的Github账户名为子域名。说起来真绕嘴，还是行动吧。</p>
<h3 id="配置Github">配置Github</h3><ol>
<li>前往<a href="https://github.com" target="_blank" rel="external">Github</a>，注册用户，这里以<code>dummy</code>为用户名做示范。</li>
<li>登录，在主页右下方点击<strong>New Repository</strong>，注意Repository Name必须符合这个格式<code>你的用户名.github.io</code>，本例子应该就是<code>dummy.github.io</code></li>
<li>然后进入这个repository的页面，找到这个repository https的地址，例如<code>https://github.com/dummy/dummy.github.io.git</code></li>
<li><p>修改hexo的配置文件</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/Dropbox/hexo</span><br><span class="line">vi _config.yml</span><br></pre></td></tr></table></figure>
<p> 在<code># Deployment</code>部分，修改内容为如下</p>
 <figure class="highlight"><table><tr><td class="code"><pre><span class="line"># Deployment&#10;## Docs: http://hexo.io/docs/deployment.html&#10;deploy:&#10;    type: git&#10;    repository: https://github.com/dummy/dummy.github.io.git&#10;    branch: master</span><br></pre></td></tr></table></figure>
<p> 保存退出。</p>
</li>
<li><p>然后你就可以使用hexo命令方便的操作了。</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo generate</span><br></pre></td></tr></table></figure>
<p> 渲染并生成你的静态博客网站所需的所有文件到<code>hexo/public</code>中去</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo deploy</span><br></pre></td></tr></table></figure>
<p> 发布生成好的网站到dummy.github.io的repository里去（这是由之前安装的插件<code>hexo-deployer-git</code>来完成的，如果没有安装请用Git命令push上去）。</p>
</li>
<li>用浏览器打开<code>http://dummy.github.io</code>，看看效果吧。</li>
</ol>
<h3 id="hexo的简化指令">hexo的简化指令</h3><p>可以使用简化指令来加速我们以后的操作。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo n <span class="comment">#new</span></span><br><span class="line">hexo g <span class="comment">#generate</span></span><br><span class="line">hexo s <span class="comment">#server</span></span><br><span class="line">hexo d <span class="comment">#deploy</span></span><br></pre></td></tr></table></figure>
<h3 id="主题Theme">主题Theme</h3><p>本博客用主题的是<a href="https://github.com/litten/hexo-theme-yilia" target="_blank" rel="external">yilia</a>，国内作者，风格清新现代，集成了多说的评论系统，个人十分喜欢。<br>其他的请自行去 <a href="https://github.com/hexojs/hexo/wiki/Themes" target="_blank" rel="external">https://github.com/hexojs/hexo/wiki/Themes</a> 查找。</p>
<p>主题的安装方法都一样，这里以<strong>yilia</strong>为例</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/Dropbox/hexo</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/litten/hexo-theme-yilia.git themes/yilia</span><br><span class="line">vi _config.yml</span><br><span class="line"><span class="comment"># 修改为 theme: yilia</span></span><br></pre></td></tr></table></figure>
<p><br></p>
<font color="slategrey">作者：<a href="http://zfan.me" target="_blank" rel="external">小米飯</a><br>原文地址：<a href="http://blog.zfan.me/2015/08/31/3分钟快速在Github-pages上免费搭建Hexo博客" target="_blank" rel="external">http://blog.zfan.me/2015/08/31/3分钟快速在Github-pages上免费搭建Hexo博客</a><br>转载、参考请注明出处，如果觉得文章对你有帮助，也请通过留言来支持一下。</font>]]></content>
    <summary type="html">
    <![CDATA[<h2 id="前言">前言</h2><p>搜索Markdown和Evernote时无意之中发现了<strong>Hexo</strong>，一个支持Markdown的静态博客框架，本人界面控，看见 <a href="http://hexo.io">http://hexo.io</a> 的页面就走不动了。</p>
<p><strong>Hexo</strong>的配置真是超乎想象得简单，以至于我手都放在键盘上却不知道从何说起了。官方文档还有非常完善的中文版本，本人是只读了官方文档就搭好了，有想自己体验的同学可以移步 <a href="https://hexo.io/zh-cn/docs/">https://hexo.io/zh-cn/docs/</a> 。</p>
<p><strong>注意：</strong>本文所写步骤是在 Mac Yosemite 10.10 上完成，使用Hexo 3.x。但并不代表其他平台无法使用此教程，至少可以参考。</p>
<h2 id="前提">前提</h2><ul>
<li>确认已经安装了<a href="http://brew.sh/">homebrew</a></li>
</ul>
<h2 id="准备工作">准备工作</h2><ol>
<li><p>安装Git</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew update</span><br><span class="line">brew install git</span><br></pre></td></tr></table></figure>
</li>
<li><p>安装Node.js</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew install node</span><br></pre></td></tr></table></figure>
</li>
<li><p>安装Hexo命令行工具</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="搭建本地Hexo工作环境">搭建本地Hexo工作环境</h2><p>实际上Hexo只是一个帮你生成静态网站的工具，hexo自带的server模块，感觉只是用来做本地测试的，真正发布时还是推荐用其他服务器。<br>换句话说，你要在多个电脑都使用Hexo来写博客，每个电脑都要配置一个Hexo环境，不过也就是安装上边的3个东西，然后把Hexo的工作目录同步一下就好了。至于怎么同步，你可以用Dropbox，Google dirve，百度云或者基于Git云服务等。</p>
<h3 id="创建hexo工作目录">创建hexo工作目录</h3><p>这里以Dropbox同步为例，以hexo为工作目录名称，你可以在任何你喜欢的地方、创建你想要的名称的文件夹作为hexo的工作目录。]]>
    
    </summary>
    
      <category term="hexo" scheme="http://zfanswer.github.io/tags/hexo/"/>
    
      <category term="教程" scheme="http://zfanswer.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hello World]]></title>
    <link href="http://zfanswer.github.io/2015/08/28/hello-world/"/>
    <id>http://zfanswer.github.io/2015/08/28/hello-world/</id>
    <published>2015-08-28T06:30:00.000Z</published>
    <updated>2015-08-31T08:50:52.000Z</updated>
    <content type="html"><![CDATA[<p><strong>Hello World, Hello Hexo.</strong></p>
<p>有几年没写过博客了，最近才知道现在流行这种生成静态页面的博客网站，轻量而且支持Markdown，最近为了Evernote不支持Markdown的事十分头疼，就拿这个来玩了一下，还发现如此小清新的模板，就拾起来做自己的博客吧，希望自己能坚持下去。</p>
<p>顺便让我来用这个博客的第一篇日志来缅怀一下之前阵亡的博客们吧。</p>
<p>最早用的是MSN的博客，基本没什么可订制的地方，只是朋友之间的评论让我在上边坚持吐槽了2年。然后众所周知的MSN关闭了博客服务，我就跳到了Wordpress阵营，还为此第一次买了租赁服务器。由于各(lan)种(duo)的原因，3年前参加工作后便停止了更新。</p>
<p>还好我都有备份，偶尔翻看一下好几年前写的东西，觉得还是有必要把一些东西留下来，希望这次能坚持的长一些，变成了IT民工，能记(tu)录(cao)的东西多了一些。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p><strong>Hello World, Hello Hexo.</strong></p>
<p>有几年没写过博客了，最近才知道现在流行这种生成静态页面的博客网站，轻量而且支持Markdown，最近为了Evernote不支持Markdown的事十分头疼，就拿这个来玩了一下，]]>
    </summary>
    
  </entry>
  
</feed>
